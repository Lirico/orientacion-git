ME GUSTA EL PAN CON QUESO

git init -> Iniciar git en un proyecto

git remote add origin "enlace al repo" -> Crea una rama raiz (origen) donde se alojara
nueso proyecto tal cual esta ahora. -> master

git add . -> Registra todos los cambios que este en rojo

git add "nombre archivo" -> Registra solo dicho archvo

git status -> Mostrar los archivos que estan y no estan registrados

git commit -m "nombre del commit" -> Una version rapida, con solo nombre/titulo

git commit -> Abre una pantalla para poner titulo y descripcion

git log -> Revisar los commits que tenemos hechos

git push -> Enviar cambios de PC a Repo (funciona en ramas que no son la rama origen)

git push origin "nombre de rama origen" -> Enviar cambios de PC a rama origen

git branch "nombre de rama" -> Crear una nueva rama 

git checkout "nombre de rama" -> Me muevo a tal rama 

git checkout -b "nombre de rama" -> Crea una rama y me mueve a ella

git pull -> Traer cambios de Repo a PC

git merge -> Fusiona una rama en otra -> Es como un push pero de rama a rama


Yo, fusione una rama paralela con la origin. ¿Quiero conservar la rama paralela de trabajo?

NO, ¿por que? Se supone, que segun las buenas practicas de GIT, cada rama tiene un
objetivo en concreto. Una vez completado el trabajo para el cual se creo esa rama... esta
no tiene razon de seguir existiendo!

Si ustedes quieren retocar un componente ya terminado -> Nueva rama para ese trabajo 

feature-navbar -> Vamos a crear una nueva caracteristica 
fix-navbar -> Modificar una caracteristica previamente hecha o terminada


